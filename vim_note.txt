My note

:help cmd 命令帮助

:new + file新建文件

保存文件：
:w或 :write
:up 同上，但windows无效。
:w newfile.txt 另存为newfile文件

:x 保存并退出
:wq 同上
:q! 强制退出不保存

可视模式选择文本
v/V/ctrl+v分别是逐字/逐行/区域选择
此时进入可视模式，利用光标的移动可以选择对应的文字，最后按y复制，用p粘贴。可视模式中我们可以通过查找或其他移动光标的方式来选择。
按o光标回到起点可反向选择。选择中可以切换选择模式。
选中之后可以做的操作除了“y“复制以外，还可以有如下操作：
d剪切 c修改 r替换 I在选中文本前插入 A在选中文本后插入 gu选中区域转为小写 gU选中区域转为大写 g~大小写互调 > 向右缩进一个单位 <向左缩进一个单位
区域选择模式可在多行行首或行末插入内容。方法是区块选中后，按I或A在文本前/后插入内容，然后按<Esc>即可。
删除多行注释:ctrl+v进入列模式;选中要取消注释的多行；如果要删除“//”按下2x即可。

复制:
yaw 复制当前单词
yw:拷贝当前字符至本单词末尾 vey效果相同
y0:拷贝当前光标到行首
y$:拷贝当前光标到行末
yy:拷贝当前行
nyy:从当前行开始拷贝n行
粘贴按p

剪切：
可视模式选择后按d剪切
dd剪切本行
ndd剪切n行
:1,10d剪切1~10行
:1,10 m 20 将第1~10行移到第20行之后

Subject delete 删除
ns 删除当前n个字符，并进入插入模式。
多行删除 ，：1,10d
要删除多行的话，可以用 ：5, 9 de
dw  光标在单词首部，删除该单词
多行删除    
:1,$d 删除所有行
J   删除两行之间的空行


翻页：
ctrl+f,b,d,u

Subject search 搜索:


光标移动：
`.  跳转到最近修改过的位置并定位编辑点
'.  跳转到最近修改的位置的行首
%   跳转到与之匹配的括号处k
``  在前一次跳转位置与当前位置间切换
f/F 查找/反向查找本行字符,光标定位到该字符的位置。
t/T 查找/反向查找本行字符,光标定位到该字符前。
 
左下上右对应hjkl,前面加n则移动n个单位
w/W
e/E
b/B
^ 本行第一个非空白字符
0   本行第一个字符
n$  移动到第n行行尾
gg  移动到文件头
G   移动到文件末行
1G  移动到文件首行
nG  移动到第n行
ctrl+f/b    光标向下/上移动一个屏幕
ctrl+d/u    光标向下/上移动半个屏幕
ctrl+o      回退一步
ctrl+i      前进一步
H/M/L   跳转到屏幕顶端/中间/底部
n(/{           光标向上移动n句/段落
n)/}           光标向下移动n句/段落



滚屏：
ctrl+e/y文字向上向下滚动
z./zz 滚动屏幕使光标所在行居中，区别是前者光标会定位到行首而后者不会
z<cr>将光标所在行滚动至屏幕顶端（<cr>是回车键-.-!）



插入：
i,I
a,A
o,O
光标后面输入10个A：10aA<Esc>,相应光标处输入：10iA<Esc>。类似：8oABC<Esc>即输入10行ABC

ddp交换当前行和其下一行
xp交换当前字符和其后一个字符



撤销和重做：u / ctrl+r

分屏：
vim -On file1 file2 ...打开两个文件垂直分屏
vim -on file1 file2 ...

打开文件后，:vs file 垂直分屏，:sp file 
按一下Ctrl+w 再通过hjkl控制上下左右屏
ctrl+ww依次切换窗口      
关闭分屏：
ctrl+w c/:q
ctrl+w o只保留当前分屏，等效于:only
qall(qa)   #退出所有窗口

同一个窗口打开多个文件
vim file1 file2 ...
切换：:bn下一个   :bp上一个
更简单的:n下一个    :N上一个
:n 跳至下一个文件，也可以直接指定要跳的文件，如:n c，可以直接跳到c文件

:e#或ctrl+^ 切换两个最近编辑的文件(不一定在同一个窗口)

:ls或:files列出缓冲区的所有文档,:b num 切换列表中序号为num的文件
:f name 另存为name的文档

文件浏览
:Ex /:E 开启目录浏览器

:Sex 水平分割当前窗口，并在一个窗口中开启目录浏览器
:shell 不关闭vim的情况下打开shell
exit从shell回到vim

Subject tab
多标签打开vim：vim -p file1 file2 ...
向右切换tab：gt，向左切换tab：gT。编辑的时候想增加一个tab：tabnew filename
:tabe file在tab的形式打开文件
:tabnew filename 新建tab文件
:tabc关闭当前tab
:tabo关闭其他所有tab
:tabs查看所有打开的tab
:tabp前一个tab
:tabn后一个tab
:tabm 0/1把当前tab移动到第一/二个
:tabr 跳转到第一个标签页
:bufdo tab split    把buffer中的文件全转成tab


vim -d file1 file2 ...  #垂直打开多窗口,并且进行比较
vimdiff file1 file2 ..  #等同于上一句

vim中执行shell中的命令,只需要在":"后面加"!"再敲shell中的命令即可,如:":!ls"

Subject map
<Esc>代表Escape键:<CR>代表Enter键；<D>代表Command键。
Alt键可以使用<M-key>或<A-key>来表示。<C>代表Ctrl.
对于组合键，可以用<C-Esc>代表Ctrl-Esc；使用<S-F1>表示Shift-F1.

使用下表中不同形式的map命令，可以针对特定的模式设置键盘映射：

控制命令：
:!command
:!ls 列出当前目录下文件
:suspend或Ctrl - Z 挂起vim，回到shell，按fg可以返回vim。  

Subject 正则

Subject NERDTree
http://yang3wei.github.io/blog/2013/01/29/nerdtree-kuai-jie-jian-ji-lu/
o       在已有窗口中打开文件、目录或书签，并跳到该窗口

快捷键
ctrl + w + h    光标 focus 左侧树形目录
ctrl + w + l    光标 focus 右侧文件显示窗口
ctrl + w + w    光标自动在左右侧窗口切换
ctrl + w + r    移动当前窗口的布局位置

o       在已有窗口中打开文件、目录或书签，并跳到该窗口
go      在已有窗口 中打开文件、目录或书签，但不跳到该窗口
t       在新 Tab 中打开选中文件/书签，并跳到新 Tab
T       在新 Tab 中打开选中文件/书签，但不跳到新 Tab
i       split 一个新窗口打开选中文件，并跳到该窗口
gi      split 一个新窗口打开选中文件，但不跳到该窗口
s       vsplit 一个新窗口打开选中文件，并跳到该窗口
gs      vsplit 一个新 窗口打开选中文件，但不跳到该窗口
!       执行当前文件
O       递归打开选中 结点下的所有目录
x       合拢选中结点的父目录
X       递归 合拢选中结点下的所有目录
e       Edit the current dif

双击    相当于 NERDTree-o
中键    对文件相当于 NERDTree-i，对目录相当于 NERDTree-e

D       删除当前书签

P       跳到根结点
p       跳到父结点
K       跳到当前目录下同级的第一个结点
J       跳到当前目录下同级的最后一个结点
k       跳到当前目录下同级的前一个结点
j       跳到当前目录下同级的后一个结点

C       将选中目录或选中文件的父目录设为根结点
u       将当前根结点的父目录设为根目录，并变成合拢原根结点
U       将当前根结点的父目录设为根目录，但保持展开原根结点
r       递归刷新选中目录
R       递归刷新根结点
m       显示文件系统菜单
cd      将 CWD 设为选中目录

I       切换是否显示隐藏文件
f       切换是否使用文件过滤器
F       切换是否显示文件
B       切换是否显示书签

q       关闭 NerdTree 窗口
?       切换是否显示 Quick Help
切换标签页

:tabnew [++opt选项] ［＋cmd］ 文件      建立对指定文件新的tab
:tabc   关闭当前的 tab
:tabo   关闭所有其他的 tab
:tabs   查看所有打开的 tab
:tabp   前一个 tab
:tabn   后一个 tab

标准模式下：
gT      前一个 tab
gt      后一个 tab

MacVim 还可以借助快捷键来完成 tab 的关闭、切换
cmd+w   关闭当前的 tab
cmd+{   前一个 tab
cmd+}   后一个 tab
testefabcdefabcd 
abcdef



Subject leader key
http://vim.wikia.com/wiki/Mapping_keys_in_Vim_-_Tutorial_(Part_3)

Subject echo
:echo mapleader

Subject Mark 书签
ma – 创建一个书签，标记为a，如果你要创建全局书签，要用大写字母。
`a – 跳转到书签a所在的行、列位置，a是你创建时候使用的字母。
‘a – 跳转到书签a所在的行位置。
:marks – 显示所有的书签。
:marks a – 显示书签a的详细信息
`. – 跳转到上次修改的行、列位置。
‘. – 跳转到上次修改的行位置。
